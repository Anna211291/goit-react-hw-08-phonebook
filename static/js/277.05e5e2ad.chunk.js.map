{"version":3,"file":"static/js/277.05e5e2ad.chunk.js","mappings":"ySAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0RAeVE,EAAcF,EAAAA,GAAAA,MAAH,kGAMXG,GAAeH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yPAaZK,GAAeL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,gFAKZO,EAASP,EAAAA,GAAAA,OAAH,6U,SC5BbQ,EAAuBC,EAAAA,KAAaC,MAAM,CAC9CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,mCACPC,IAAI,GAAI,6CACRC,SAAS,wCACZC,OAAQN,EAAAA,KACLG,IAAI,EAAG,oCACPC,IAAI,GAAI,6CACRC,SAAS,0DAGDE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAAnB,IAsBlC,OACE,SAAC,KAAD,CACEC,cAAe,CACbZ,KAAM,GACNI,OAAQ,IAEVS,iBAAkBhB,EAClBiB,SA3Ba,SAAC,EAAD,GAAsC,IAAnCd,EAAkC,EAAlCA,KAAMI,EAA4B,EAA5BA,OAAYW,EAAgB,EAAhBA,UAC9BC,EAAa,CACjBhB,KAAAA,EACAI,OAAAA,EACAa,IAAIC,EAAAA,EAAAA,OAGmBV,EAASW,MAChC,SAAAC,GAAO,OAAIA,EAAQpB,KAAKqB,gBAAkBrB,EAAKqB,aAAxC,IAIPC,MACE,0EAIJhB,GAASiB,EAAAA,EAAAA,IAAWP,IACpBD,IACD,EAEC,UAQE,UAAC3B,EAAD,YACE,UAACG,EAAD,mBAEE,SAACC,EAAD,CAAcQ,KAAK,UACnB,SAACN,EAAD,CAAcM,KAAK,OAAOwB,UAAU,aAGtC,UAACjC,EAAD,qBAEE,SAACC,EAAD,CAAciC,KAAK,MAAMzB,KAAK,YAC9B,SAACN,EAAD,CAAcM,KAAK,SAASwB,UAAU,aAGxC,UAAC5B,EAAD,CAAQ6B,KAAK,SAAb,WACE,SAAC,MAAD,CAAeC,KAAM,KADvB,sBAMP,EC3EYC,EAAwBtC,EAAAA,GAAAA,GAAH,sLAWrBuC,EAAcvC,EAAAA,GAAAA,EAAH,2KAWXwC,EAASxC,EAAAA,GAAAA,OAAH,wOCfNyC,EAAkB,WAC7B,IAAMxB,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAAnB,IAC5BoB,GAAUtB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMqB,OAAV,IAC3BC,EAAiBxB,EAASyB,QAAO,SAAAb,GAAO,OAC5CA,EAAQpB,KAAKqB,cAAca,SAASH,EAAQV,cADA,IAI9C,OACE,8BACGW,EAAeG,KAAI,gBAAGnC,EAAH,EAAGA,KAAMI,EAAT,EAASA,OAAQa,EAAjB,EAAiBA,GAAjB,OAClB,UAACU,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAgBF,KAAM,KACrB1B,EAFH,KAEWI,MAEX,SAACyB,EAAD,CAAQJ,KAAK,SAASW,QAAS,kBAAM9B,GAAS+B,EAAAA,EAAAA,IAAcpB,GAA7B,EAA/B,UACE,SAAC,MAAD,CAAiBS,KAAM,SANCT,EADV,KAazB,EC/BYqB,EAAqBjD,EAAAA,GAAAA,GAAH,mFCClBkD,EAAc,WACzB,OACE,SAACD,EAAD,WACE,SAACR,EAAD,KAGL,E,UCPYU,EAAenD,EAAAA,GAAAA,IAAH,+JASZoD,EAAcpD,EAAAA,GAAAA,MAAH,yIAOXqD,EAAgBrD,EAAAA,GAAAA,MAAH,4QCbbsD,EAAS,WACpB,IAAMrC,GAAWC,EAAAA,EAAAA,MACXwB,GAAUtB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMqB,OAAV,IAEjC,OACE,UAACS,EAAD,YACE,UAACC,EAAD,qCACwB,SAAC,MAAD,QAExB,SAACC,EAAD,CACEjB,KAAK,OACLmB,MAAOb,EACPc,SAAU,SAAAC,GAAG,OAAIxC,GAASyC,EAAAA,EAAAA,IAAcD,EAAIE,OAAOJ,OAAtC,EACbK,YAAY,wBAInB,E,oBCbc,SAASC,IACtB,IAAM5C,GAAWC,EAAAA,EAAAA,MACjB,GAA6BE,EAAAA,EAAAA,IAAY0C,EAAAA,IAAjCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAMnB,OAJAC,EAAAA,EAAAA,YAAU,WACRhD,GAASiD,EAAAA,EAAAA,MACV,GAAE,CAACjD,KAGF,UAAC,KAAD,YACE,SAAC,KAAD,yBACA,SAACD,EAAD,KACA,SAAC,KAAD,wBACA,UAAC,KAAD,YACE,SAACsC,EAAD,IACCS,IAAa,+CACbC,IAAS,uBAAIA,KACd,SAACd,EAAD,SAIP,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 460px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  gap: 22px;\n  color: #7eb101;\n  font-size: 16px;\n  font-weight: 700;\n  text-decoration: underline;\n  border: 4px solid #7eb101;\n  padding: 26px;\n  border-radius: 15px;\n`;\n\nexport const StyledLable = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const FieldWrapper = styled(Field)`\n  width: 100%;\n  height: 36px;\n  font-size: 20px;\n  padding: 4px;\n  outline: none;\n  border: 2px solid #bbf330;\n  &:hover {\n    border: 3px solid #7eb101;\n  }\n  border-radius: 8px;\n  background-color: transparent;\n`;\nexport const ErrorWrapper = styled(ErrorMessage)`\n  color: red;\n  font-weight: 500;\n  font-size: 14px;\n`;\nexport const AddBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  gap: 4px;\n  border-radius: 8px;\n  border: none;\n  background-color: transparent;\n  color: #7eb101;\n  border: 2px solid #7eb101;\n  &:hover {\n    background-color: #7eb101;\n    color: white;\n  }\n  font-weight: 700;\n  font-size: 14px;\n  padding: 8px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { RiUserAddFill } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  AddBtn,\n  ErrorWrapper,\n  FieldWrapper,\n  StyledForm,\n  StyledLable,\n} from './ContactForm.styled';\n\nconst PhonebookValidSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(1, 'Too Short! Must be min 1 letter')\n    .max(30, 'Too Long! Must be no more than 30 letters')\n    .required('No valide name. Must be min 1 letter'),\n  number: Yup.string()\n    .min(7, 'Too Short! Must be min 7 numbers')\n    .max(11, 'Too Long! Must be no more than 11 numbers')\n    .required('No valide phone number. Must be min 7 max 11 numbers'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contactList);\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    const dublicateContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (dublicateContact) {\n      alert(\n        'Contact with this name already exists. Please enter a different name.'\n      );\n      return;\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={PhonebookValidSchema}\n      onSubmit={onSubmit}\n    >\n      <StyledForm>\n        <StyledLable>\n          Name\n          <FieldWrapper name=\"name\" />\n          <ErrorWrapper name=\"name\" component=\"span\" />\n        </StyledLable>\n\n        <StyledLable>\n          Number\n          <FieldWrapper type=\"tel\" name=\"number\" />\n          <ErrorWrapper name=\"number\" component=\"span\" />\n        </StyledLable>\n\n        <AddBtn type=\"submit\">\n          <RiUserAddFill size={16} /> Add contact\n        </AddBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContactListItem = styled.li`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  color: #7eb101;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ContactInfo = styled.p`\n  display: flex;\n  justify-content: center;\n\n  color: #2c2c2c;\n  gap: 8px;\n  svg {\n    color: #7eb101;\n    border: 2px solid #7eb101;\n  }\n`;\nexport const DelBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  border-radius: 2px;\n  border: none;\n  background-color: transparent;\n  color: #7eb101;\n  &:hover {\n    background-color: #7eb101;\n    color: white;\n  }\n`;\n","import { RiDeleteBinLine, RiContactsFill } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ContactInfo,\n  DelBtn,\n  StyledContactListItem,\n} from './ContactListItem.styled';\n\nexport const ContactListItem = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contactList);\n  const filters = useSelector(state => state.filters);\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filters.toLowerCase())\n  );\n\n  return (\n    <>\n      {filterContacts.map(({ name, number, id }) => (\n        <StyledContactListItem key={id}>\n          <ContactInfo>\n            <RiContactsFill size={22} />\n            {name}: {number}\n          </ContactInfo>\n          <DelBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            <RiDeleteBinLine size={20} />\n          </DelBtn>\n        </StyledContactListItem>\n      ))}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ContactListWrapper } from 'components/ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  return (\n    <ContactListWrapper>\n      <ContactListItem />\n    </ContactListWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  color: #7eb101;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const FilterLable = styled.label`\n  display: flex;\n  justify-content: space-between;\n  color: #7eb101;\n  font-size: 16px;\n  font-weight: 700;\n`;\nexport const InputdWrapper = styled.input`\n  width: 100%;\n  height: 36px;\n  font-size: 16px;\n  padding: 4px;\n  outline: none;\n  border: 2px solid #bbf330;\n  &:hover {\n    border: 3px solid #7eb101;\n  }\n  border-radius: 8px;\n  color: #2c2c2c;\n  background-color: transparent;\n`;\n","import { RiUserSearchFill } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactFilter } from 'redux/filtersSlice';\nimport { FilterLable, InputdWrapper, StyledFilter } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector(state => state.filters);\n\n  return (\n    <StyledFilter>\n      <FilterLable>\n        Find contacts by name <RiUserSearchFill />\n      </FilterLable>\n      <InputdWrapper\n        type=\"text\"\n        value={filters}\n        onChange={evt => dispatch(contactFilter(evt.target.value))}\n        placeholder=\"Filter by name...\"\n      />\n    </StyledFilter>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/contactSlice';\nimport { ContactsWrapper, Title, Wrapper } from 'components/GlobalStyle';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <ContactsWrapper>\n        <Filter />\n        {isLoading && <b>Loading contacts...</b>}\n        {error && <b>{error}</b>}\n        <ContactList />\n      </ContactsWrapper>\n    </Wrapper>\n  );\n}\n"],"names":["StyledForm","styled","Form","StyledLable","FieldWrapper","Field","ErrorWrapper","ErrorMessage","AddBtn","PhonebookValidSchema","Yup","shape","name","min","max","required","number","ContactForm","dispatch","useDispatch","contacts","useSelector","state","contactList","initialValues","validationSchema","onSubmit","resetForm","newContact","id","nanoid","some","contact","toLowerCase","alert","addContact","component","type","size","StyledContactListItem","ContactInfo","DelBtn","ContactListItem","filters","filterContacts","filter","includes","map","onClick","deleteContact","ContactListWrapper","ContactList","StyledFilter","FilterLable","InputdWrapper","Filter","value","onChange","evt","contactFilter","target","placeholder","Contacts","getContacts","isLoading","error","useEffect","fetchContacts"],"sourceRoot":""}